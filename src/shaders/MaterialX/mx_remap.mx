// Open Shading Language : Copyright (c) 2009-2017 Sony Pictures Imageworks Inc., et al.
// https://github.com/imageworks/OpenShadingLanguage/blob/master/LICENSE
// 
// MaterialX specification (c) 2017 Lucasfilm Ltd. 
// http://www.materialx.org/

#include "mx_types.h"
#include "mx_globals.h"

shader SHADER_NAME(mx_ramp4)
    [[ string help = "bilinear 4-corner ramp source" ]]
  (
    TYPE valuetl = TYPE_ZERO
        [[  string help = "value at the top right (s=0,t=0) edge"  ]],
    TYPE valuetr = TYPE_ONE
        [[  string help = "value at the top right (s=1,t=0) edge"  ]],
    TYPE valuebl = TYPE_ZERO
        [[  string help = "value at the bottom left (s=0,t=1) edge"  ]],
    TYPE valuebr = TYPE_ONE
        [[  string help = "value at the bottom right (s=1,t=1) edge"  ]],

    vector2 texcoord = { u, v }
        [[  string help = "input coordinate position",
            int lockgeom = 0 ]],

    output TYPE out = TYPE_ZERO
  )
{
    float s = texcoord.x;
    float t = texcoord.y;

    #ifdef FLIP_V
    //if we are flipping v and texcoord is not connected then we need to flip the v value here,
    //otherwise we assume the incoming value has already been flipped (this is handled in the mx_texcoord node)
    if (!isconnected(texcoord)){
        t = t - 1;
    }
    #endif 

    float ss = clamp (s, 0, 1);
    float tt = clamp (t, 0, 1);
    out = mix ( mix(valuetl, valuetr, ss),
                mix(valuebl, valuebr, ss), 
                tt);
}