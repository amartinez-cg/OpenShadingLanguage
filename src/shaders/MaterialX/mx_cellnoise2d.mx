// Open Shading Language : Copyright (c) 2009-2017 Sony Pictures Imageworks Inc., et al.
// https://github.com/imageworks/OpenShadingLanguage/blob/master/LICENSE
// 
// MaterialX specification (c) 2017 Lucasfilm Ltd. 
// http://www.materialx.org/

#include "mx_types.h"
#include "mx_globals.h"

shader SHADER_NAME(mx_cellnoise2d)
    [[ string help = "2D cell noise in 1 channel" ]]
  (
    vector2 texcoord = {u, v}
        [[  string help = "input coordinate position",
            int lockgeom = 0 ]],
            
    output TYPE out = TYPE_ZERO
  )
{
    float s = texcoord.x;
    float t = texcoord.y;

    #ifdef FLIP_V
    //if we are flipping v and texcoord is not connected then we need to flip the v value here,
    //otherwise we assume the incoming value has already been flipped (this is handled in the mx_texcoord node)
    if (!isconnected(texcoord)){
        t = t - 1;
    }
    #endif

    float fnoise = (float) cellnoise (s, t);

    color cnoise = (color) cellnoise (s, t);

    #if defined(FLOAT)
        out = fnoise;
    #elif defined(COLOR) || defined(VECTOR)
        out = cnoise;
    #elif defined(COLOR2)
        out.r = cnoise[0];
        out.g = cnoise[1];
    #elif defined(COLOR4)
        out.rgb = cnoise;
        out.a =  fnoise;
    #elif defined(VECTOR2) || defined(VECTOR4)
        out.x = cnoise[0];
        out.y = cnoise[1];
    # if defined(VECTOR4)
        out.z = cnoise[2];
        out.w = fnoise;
    # endif
    #endif
}
